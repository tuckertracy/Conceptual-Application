#BlueJ class context
comment0.target=HuffmanCode
comment1.params=ft
comment1.target=HuffmanCode(FrequencyTable)
comment1.text=\n\ Uses\ the\ given\ frequency\ table\ to\ build\ a\ Huffman\ encoding\ tree,\n\ and\ then\ traverses\ it\ to\ collect\ a\ table\ of\ encodings\ for\ the\ characters\n\ in\ the\ tree\n
comment10.params=in
comment10.target=char\ decodeNext(java.io.InputStreamReader)
comment11.params=in\ cur
comment11.target=char\ decodeNode(java.io.InputStreamReader,\ Node)
comment2.params=isr
comment2.target=HuffmanCode(java.io.InputStreamReader)
comment3.params=c
comment3.target=java.lang.String\ encode(char)
comment3.text=\n\ Looks\ up\ and\ returns\ the\ variable-length\ binary\ encoding\n\ for\ the\ given\ character,\ c\n
comment4.params=cur\ path
comment4.target=void\ buildCode(Node,\ java.lang.String)
comment4.text=\ Traverses\ the\ tree\ rooted\ at\ 'cur'\ and\ adds\ all\ leaf\ nodes\n\ \ \ \ that\ are\ found\ to\ the\ 'code[]'\ array\ with\ their\ binary\ encoding.\n\ \ \ \ The\ 'path'\ is\ an\ accumulator\ that\ keeps\ track\ of\ the\ explored\n\ \ \ \ path\ of\ left/right\ branches\ via\ "0"\ and\ "1"s.\n
comment5.params=ft
comment5.target=Node\ buildTree(FrequencyTable)
comment6.params=out
comment6.target=void\ export(java.io.PrintWriter)
comment7.params=cur\ out
comment7.target=void\ export(Node,\ java.io.PrintWriter)
comment8.params=s\ c
comment8.target=java.lang.String\ pad(java.lang.String,\ int)
comment9.params=in
comment9.target=Node\ readTree(java.io.InputStreamReader)
numComments=12
