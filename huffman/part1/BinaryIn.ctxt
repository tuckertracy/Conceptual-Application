#BlueJ class context
comment0.target=BinaryIn
comment0.text=\n\ \ <i>Binary\ input</i>.\ This\ class\ provides\ methods\ for\ reading\n\ \ in\ bits\ from\ a\ binary\ input\ stream,\ either\n\ \ one\ bit\ at\ a\ time\ (as\ a\ {@code\ boolean}),\n\ \ 8\ bits\ at\ a\ time\ (as\ a\ {@code\ byte}\ or\ {@code\ char}),\n\ \ 16\ bits\ at\ a\ time\ (as\ a\ {@code\ short}),\n\ \ 32\ bits\ at\ a\ time\ (as\ an\ {@code\ int}\ or\ {@code\ float}),\ or\n\ \ 64\ bits\ at\ a\ time\ (as\ a\ {@code\ double}\ or\ {@code\ long}).\n\ \ <p>\n\ \ The\ binary\ input\ stream\ can\ be\ from\ standard\ input,\ a\ filename,\n\ \ a\ URL\ name,\ a\ Socket,\ or\ an\ InputStream.\n\ \ <p>\n\ \ All\ primitive\ types\ are\ assumed\ to\ be\ represented\ using\ their\ \n\ \ standard\ Java\ representations,\ in\ big-endian\ (most\ significant\n\ \ byte\ first)\ order.\n\ \ <p>\n\ \ The\ client\ should\ not\ intermix\ calls\ to\ {@code\ BinaryIn}\ with\ calls\n\ \ to\ {@code\ In};\ otherwise\ unexpected\ behavior\ will\ result.\n\n\ \ @author\ Robert\ Sedgewick\n\ \ @author\ Kevin\ Wayne\n
comment1.params=
comment1.target=BinaryIn()
comment1.text=\n\ Initializes\ a\ binary\ input\ stream\ from\ standard\ input.\n
comment10.params=
comment10.target=char\ readChar()
comment10.text=\n\ Reads\ the\ next\ 8\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ an\ 8-bit\ char.\n\n\ @return\ the\ next\ 8\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ char}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 8\ bits\ available\n
comment11.params=r
comment11.target=char\ readChar(int)
comment11.text=\n\ Reads\ the\ next\ r\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ an\ r-bit\ character.\n\n\ @param\ \ r\ number\ of\ bits\ to\ read\n\ @return\ the\ next\ {@code\ r}\ bits\ of\ data\ from\ this\ binary\ input\ streamt\ as\ a\ {@code\ char}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ {@code\ r}\ bits\ available\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 1\ <\=\ r\ <\=\ 16}\n
comment12.params=
comment12.target=java.lang.String\ readString()
comment12.text=\n\ Reads\ the\ remaining\ bytes\ of\ data\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ string.\ \n\n\ @return\ the\ remaining\ bytes\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ String}\n\ @throws\ NoSuchElementException\ if\ this\ binary\ input\ stream\ is\ empty\ or\ if\ the\ number\ of\ bits\n\ \ \ \ \ \ \ \ \ available\ is\ not\ a\ multiple\ of\ 8\ (byte-aligned)\n
comment13.params=
comment13.target=short\ readShort()
comment13.text=\n\ Reads\ the\ next\ 16\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 16-bit\ short.\n\n\ @return\ the\ next\ 16\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ short}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 16\ bits\ available\n
comment14.params=
comment14.target=int\ readInt()
comment14.text=\n\ Reads\ the\ next\ 32\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 32-bit\ int.\n\n\ @return\ the\ next\ 32\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ int}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 32\ bits\ available\n
comment15.params=r
comment15.target=int\ readInt(int)
comment15.text=\n\ Reads\ the\ next\ r\ bits\ from\ this\ binary\ input\ stream\ return\ as\ an\ r-bit\ int.\n\n\ @param\ \ r\ number\ of\ bits\ to\ read\n\ @return\ the\ next\ {@code\ r}\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ int}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ r\ bits\ available\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 1\ <\=\ r\ <\=\ 32}\n
comment16.params=
comment16.target=long\ readLong()
comment16.text=\n\ Reads\ the\ next\ 64\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 64-bit\ long.\n\n\ @return\ the\ next\ 64\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ long}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 64\ bits\ available\n
comment17.params=
comment17.target=double\ readDouble()
comment17.text=\n\ Reads\ the\ next\ 64\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 64-bit\ double.\n\n\ @return\ the\ next\ 64\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ double}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 64\ bits\ available\n
comment18.params=
comment18.target=float\ readFloat()
comment18.text=\n\ Reads\ the\ next\ 32\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 32-bit\ float.\n\n\ @return\ the\ next\ 32\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ float}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 32\ bits\ available\n
comment19.params=
comment19.target=byte\ readByte()
comment19.text=\n\ Reads\ the\ next\ 8\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ an\ 8-bit\ byte.\n\n\ @return\ the\ next\ 8\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ byte}\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 8\ bits\ available\n
comment2.params=is
comment2.target=BinaryIn(java.io.InputStream)
comment2.text=\n\ Initializes\ a\ binary\ input\ stream\ from\ an\ {@code\ InputStream}.\n\n\ @param\ is\ the\ {@code\ InputStream}\ object\n
comment20.params=args
comment20.target=void\ main(java.lang.String[])
comment20.text=\n\ Unit\ tests\ the\ {@code\ BinaryIn}\ data\ type.\n\ Reads\ the\ name\ of\ a\ file\ or\ URL\ (first\ command-line\ argument)\n\ and\ writes\ it\ to\ a\ file\ (second\ command-line\ argument).\n\n\ @param\ args\ the\ command-line\ arguments\n
comment3.params=socket
comment3.target=BinaryIn(java.net.Socket)
comment3.text=\n\ Initializes\ a\ binary\ input\ stream\ from\ a\ socket.\n\n\ @param\ socket\ the\ socket\n
comment4.params=url
comment4.target=BinaryIn(java.net.URL)
comment4.text=\n\ Initializes\ a\ binary\ input\ stream\ from\ a\ URL.\n\n\ @param\ url\ the\ URL\n
comment5.params=name
comment5.target=BinaryIn(java.lang.String)
comment5.text=\n\ Initializes\ a\ binary\ input\ stream\ from\ a\ filename\ or\ URL\ name.\n\n\ @param\ name\ the\ name\ of\ the\ file\ or\ URL\n
comment6.params=
comment6.target=void\ fillBuffer()
comment7.params=
comment7.target=boolean\ exists()
comment7.text=\n\ Returns\ true\ if\ this\ binary\ input\ stream\ exists.\n\n\ @return\ {@code\ true}\ if\ this\ binary\ input\ stream\ exists;\n\ \ \ \ \ \ \ \ \ {@code\ false}\ otherwise\n
comment8.params=
comment8.target=boolean\ isEmpty()
comment8.text=\n\ Returns\ true\ if\ this\ binary\ input\ stream\ is\ empty.\n\n\ @return\ {@code\ true}\ if\ this\ binary\ input\ stream\ is\ empty;\n\ \ \ \ \ \ \ \ \ {@code\ false}\ otherwise\n
comment9.params=
comment9.target=boolean\ readBoolean()
comment9.text=\n\ Reads\ the\ next\ bit\ of\ data\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ boolean.\n\n\ @return\ the\ next\ bit\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ boolean}\n\ @throws\ NoSuchElementException\ if\ this\ binary\ input\ stream\ is\ empty\n
numComments=21
